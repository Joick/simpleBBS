<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myselfbbs.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.myselfbbs.po.User">
    <constructor>
      <idArg column="id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="account" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="nick_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="phone" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="id_card" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="password" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="pay_password" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="head_image" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="gender" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="region" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="signature" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="register_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="register_ip" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="register_channel" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="grade" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="fans" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="effective_percent" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="average_income" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="push" javaType="java.lang.Boolean" jdbcType="BIT" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, account, nick_name, phone, id_card, password, pay_password, head_image, gender, 
    region, signature, register_time, register_ip, register_channel, grade, fans, effective_percent, 
    create_time, average_income, push
  </sql>
  <select id="selectByExample" parameterType="com.myselfbbs.po.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.myselfbbs.po.UserExample">
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.myselfbbs.po.User">
    insert into user (id, account, nick_name, 
      phone, id_card, password, 
      pay_password, head_image, gender, 
      region, signature, register_time, 
      register_ip, register_channel, grade, 
      fans, effective_percent, create_time, 
      average_income, push)
    values (#{id,jdbcType=BIGINT}, #{account,jdbcType=VARCHAR}, #{nickName,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{idCard,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{payPassword,jdbcType=VARCHAR}, #{headImage,jdbcType=VARCHAR}, #{gender,jdbcType=INTEGER}, 
      #{region,jdbcType=VARCHAR}, #{signature,jdbcType=VARCHAR}, #{registerTime,jdbcType=TIMESTAMP}, 
      #{registerIp,jdbcType=VARCHAR}, #{registerChannel,jdbcType=INTEGER}, #{grade,jdbcType=VARCHAR}, 
      #{fans,jdbcType=INTEGER}, #{effectivePercent,jdbcType=DECIMAL}, #{createTime,jdbcType=TIMESTAMP}, 
      #{averageIncome,jdbcType=DECIMAL}, #{push,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.myselfbbs.po.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="nickName != null">
        nick_name,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="idCard != null">
        id_card,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="payPassword != null">
        pay_password,
      </if>
      <if test="headImage != null">
        head_image,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="region != null">
        region,
      </if>
      <if test="signature != null">
        signature,
      </if>
      <if test="registerTime != null">
        register_time,
      </if>
      <if test="registerIp != null">
        register_ip,
      </if>
      <if test="registerChannel != null">
        register_channel,
      </if>
      <if test="grade != null">
        grade,
      </if>
      <if test="fans != null">
        fans,
      </if>
      <if test="effectivePercent != null">
        effective_percent,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="averageIncome != null">
        average_income,
      </if>
      <if test="push != null">
        push,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="idCard != null">
        #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="payPassword != null">
        #{payPassword,jdbcType=VARCHAR},
      </if>
      <if test="headImage != null">
        #{headImage,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=INTEGER},
      </if>
      <if test="region != null">
        #{region,jdbcType=VARCHAR},
      </if>
      <if test="signature != null">
        #{signature,jdbcType=VARCHAR},
      </if>
      <if test="registerTime != null">
        #{registerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="registerIp != null">
        #{registerIp,jdbcType=VARCHAR},
      </if>
      <if test="registerChannel != null">
        #{registerChannel,jdbcType=INTEGER},
      </if>
      <if test="grade != null">
        #{grade,jdbcType=VARCHAR},
      </if>
      <if test="fans != null">
        #{fans,jdbcType=INTEGER},
      </if>
      <if test="effectivePercent != null">
        #{effectivePercent,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="averageIncome != null">
        #{averageIncome,jdbcType=DECIMAL},
      </if>
      <if test="push != null">
        #{push,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.myselfbbs.po.UserExample" resultType="java.lang.Long">
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.nickName != null">
        nick_name = #{record.nickName,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.idCard != null">
        id_card = #{record.idCard,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.payPassword != null">
        pay_password = #{record.payPassword,jdbcType=VARCHAR},
      </if>
      <if test="record.headImage != null">
        head_image = #{record.headImage,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=INTEGER},
      </if>
      <if test="record.region != null">
        region = #{record.region,jdbcType=VARCHAR},
      </if>
      <if test="record.signature != null">
        signature = #{record.signature,jdbcType=VARCHAR},
      </if>
      <if test="record.registerTime != null">
        register_time = #{record.registerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.registerIp != null">
        register_ip = #{record.registerIp,jdbcType=VARCHAR},
      </if>
      <if test="record.registerChannel != null">
        register_channel = #{record.registerChannel,jdbcType=INTEGER},
      </if>
      <if test="record.grade != null">
        grade = #{record.grade,jdbcType=VARCHAR},
      </if>
      <if test="record.fans != null">
        fans = #{record.fans,jdbcType=INTEGER},
      </if>
      <if test="record.effectivePercent != null">
        effective_percent = #{record.effectivePercent,jdbcType=DECIMAL},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.averageIncome != null">
        average_income = #{record.averageIncome,jdbcType=DECIMAL},
      </if>
      <if test="record.push != null">
        push = #{record.push,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user
    set id = #{record.id,jdbcType=BIGINT},
      account = #{record.account,jdbcType=VARCHAR},
      nick_name = #{record.nickName,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      id_card = #{record.idCard,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      pay_password = #{record.payPassword,jdbcType=VARCHAR},
      head_image = #{record.headImage,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=INTEGER},
      region = #{record.region,jdbcType=VARCHAR},
      signature = #{record.signature,jdbcType=VARCHAR},
      register_time = #{record.registerTime,jdbcType=TIMESTAMP},
      register_ip = #{record.registerIp,jdbcType=VARCHAR},
      register_channel = #{record.registerChannel,jdbcType=INTEGER},
      grade = #{record.grade,jdbcType=VARCHAR},
      fans = #{record.fans,jdbcType=INTEGER},
      effective_percent = #{record.effectivePercent,jdbcType=DECIMAL},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      average_income = #{record.averageIncome,jdbcType=DECIMAL},
      push = #{record.push,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.myselfbbs.po.User">
    update user
    <set>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="idCard != null">
        id_card = #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="payPassword != null">
        pay_password = #{payPassword,jdbcType=VARCHAR},
      </if>
      <if test="headImage != null">
        head_image = #{headImage,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=INTEGER},
      </if>
      <if test="region != null">
        region = #{region,jdbcType=VARCHAR},
      </if>
      <if test="signature != null">
        signature = #{signature,jdbcType=VARCHAR},
      </if>
      <if test="registerTime != null">
        register_time = #{registerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="registerIp != null">
        register_ip = #{registerIp,jdbcType=VARCHAR},
      </if>
      <if test="registerChannel != null">
        register_channel = #{registerChannel,jdbcType=INTEGER},
      </if>
      <if test="grade != null">
        grade = #{grade,jdbcType=VARCHAR},
      </if>
      <if test="fans != null">
        fans = #{fans,jdbcType=INTEGER},
      </if>
      <if test="effectivePercent != null">
        effective_percent = #{effectivePercent,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="averageIncome != null">
        average_income = #{averageIncome,jdbcType=DECIMAL},
      </if>
      <if test="push != null">
        push = #{push,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.myselfbbs.po.User">
    update user
    set account = #{account,jdbcType=VARCHAR},
      nick_name = #{nickName,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      id_card = #{idCard,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      pay_password = #{payPassword,jdbcType=VARCHAR},
      head_image = #{headImage,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=INTEGER},
      region = #{region,jdbcType=VARCHAR},
      signature = #{signature,jdbcType=VARCHAR},
      register_time = #{registerTime,jdbcType=TIMESTAMP},
      register_ip = #{registerIp,jdbcType=VARCHAR},
      register_channel = #{registerChannel,jdbcType=INTEGER},
      grade = #{grade,jdbcType=VARCHAR},
      fans = #{fans,jdbcType=INTEGER},
      effective_percent = #{effectivePercent,jdbcType=DECIMAL},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      average_income = #{averageIncome,jdbcType=DECIMAL},
      push = #{push,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>